version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sahara-journeys-api
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    ports:
      - "8000:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=sahara_journeys
      - DB_USERNAME=postgres
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - postgres
      - redis
    networks:
      - sahara-network

  postgres:
    image: postgres:15-alpine
    container_name: sahara-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sahara_journeys
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sahara-network

  redis:
    image: redis:7-alpine
    container_name: sahara-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sahara-network

  nginx-proxy:
    image: nginx:alpine
    container_name: sahara-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/proxy.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - sahara-network

volumes:
  postgres_data:
  redis_data:

networks:
  sahara-network:
    driver: bridge